#!/usr/bin/python3
import sys
try:
	from periphery import GPIO, GPIOError
except RuntimeError:
	print("Error importing gpio support (python periphery)!")

def GPIOLight(commands):
	# 458 is gpio pin offset for opensuse kernel
	# 17 is logical port that light control is connected to
	lightControlPin=458+17

	pin = GPIO(lightControlPin, "preserve")
	if pin.direction != "out":
		pin = GPIO(lightControlPin, "out")

	def controlLight(state):
		value = False

		if state == 0:
			value = False
		elif state == "off":
			value = False
		elif state == 1:
			value = True
		elif state == "on":
			value = True
		elif state == "toggle":
			try:
				value = not pin.read()
			except GPIOError:
				value = True
		elif state == "status":
			try:
				value = pin.read()
			except GPIOError:
				value = False
			print("on" if value else "off")
			return
		else:
			print("unknown state", state)
			return

		pin.write(value)

	for command in commands:
		controlLight(command)

	pin.close()

if __name__ == "__main__":
	if (len(sys.argv) == 1):
		cmd = sys.argv[0].split("/")[-1].split("-")[-1]
		GPIOLight([cmd])
	else:
		GPIOLight(sys.argv[1:])
	sys.exit(0)
